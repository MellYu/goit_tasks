{"version":3,"sources":["webpack:///./js/task2.js","webpack:///./utils/index.js","webpack:///./js/task3.js","webpack:///./js/task1.js"],"names":["amount","clear","node","innerHTML","appendImages","searchValue","keyApi","page","request","fetch","then","resp","json","images","hits","catch","err","getImage","length","map","image","insertAdjacentHTML","webformatURL","largeImageURL","tags","createBtn","document","querySelector","cleatBtn","container","input","setAttribute","addEventListener","e","value","target","preventDefault","removeAttribute","initialSize","i","size","box","createElement","style","min","randomColor","max","Math","round","random","appendChild","createBoxes","body","inputRef","getElementById","gallery","intersectingContainer","searchRequest","classList","add","currentTarget","elements","query","img","alt","dataset","source","getAttribute","basicLightbox","show","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","builder","baseString","this","append","str","prepend","pad","console","log"],"mappings":"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","file":"main.bb86516b6fc64ac50f0b.js","sourcesContent":["import { clear, createBoxes } from \"../utils\";\r\n\r\nconst createBtn = document.querySelector(\"[data-action='create']\");\r\nconst cleatBtn = document.querySelector(\"[data-action='destroy']\");\r\nconst container = document.querySelector('#boxes');\r\nconst input = document.querySelector('.js-input');\r\nconst initialSize = 30;\r\n\r\ncreateBtn.setAttribute(\"disabled\", \"disabled\");\r\n\r\nlet amount;\r\ninput.addEventListener('input', e => {\r\n  let value = e.target.value;\r\n  e.preventDefault();\r\n  if(+value <= 100 && +value > 0){\r\n    amount = +value;\r\n    createBtn.removeAttribute(\"disabled\", \"disabled\");\r\n  }\r\n  else createBtn.setAttribute(\"disabled\", \"disabled\");\r\n  \r\n});\r\n\r\ncreateBtn.addEventListener('click', () => {\r\n  createBoxes(container, amount, initialSize)\r\n  input.value = '';\r\n});\r\ncleatBtn.addEventListener('click', () => clear(container));\r\n","import * as basicLightbox from 'basiclightbox';\r\n\r\nexport const randomColor = (min = 0, max = 255) => {\r\n  const first = Math.round(Math.random() * (max - min) + min);\r\n  const second = Math.round(Math.random() * (max - min) + min);\r\n  const third = Math.round(Math.random() * (max - min) + min);\r\n  return `rgb(${first}, ${second}, ${third})`;\r\n};\r\n\r\nexport const createBoxes = (node, amount, initialSize) => {\r\n  clear(node);\r\n  for (let i = 0; i < +amount; i += 1) {\r\n    const size = initialSize + i * 10;\r\n    const box = document.createElement('div');\r\n    box.style = `width: ${size}px; height:${size}px; background-color:${randomColor()}`;\r\n    node.appendChild(box);\r\n  }\r\n};\r\n\r\nexport const clear = node => {\r\n  node.innerHTML = '';\r\n};\r\n\r\nexport const getImage = (request, keyApi, page) => {\r\n  const baseURL = 'https://pixabay.com/api/';\r\n  const params = `?image_type=photo&orientation=horizontal&q=${request}&page=${page}&per_page=20&key=${keyApi}`;\r\n  return fetch(baseURL + params)\r\n    .then(resp => {\r\n      return resp.json();\r\n    })\r\n    .then(images => images.hits)\r\n    .catch(err => err);\r\n};\r\n\r\nexport const appendImages = (node, searchValue, keyApi, page) => {\r\n  getImage(searchValue, keyApi, page).then(images => {\r\n    if (images.length !== 0) {\r\n      images.map(image => {\r\n        return node.insertAdjacentHTML(\r\n          'beforeend',\r\n          `<li>\r\n                    <a>\r\n                        <img\r\n                            src=\"${image.webformatURL}\"\r\n                            data-source=${image.largeImageURL}\r\n                            alt=\"${image.tags}\"\r\n                        />\r\n                    </a>\r\n                </li>`,\r\n        );\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const createPhotoModal = (img, alt) =>\r\nbasicLightbox.create(`<img width=\"800\" height=\"600\" src=\"${img}\" alt=\"${alt}\">`).show();","import { appendImages, clear, createPhotoModal } from '../utils';\r\nconst body = document.body;\r\nconst inputRef = document.getElementById('search-form');\r\nconst gallery = document.createElement('ul');\r\nconst intersectingContainer = document.createElement('div');\r\n\r\nconst keyApi = '22109419-ce4d58a16a94de839f0f62cea';\r\nlet page = 1;\r\nlet searchRequest = '';\r\n\r\nintersectingContainer.classList.add('intersectingContainer')\r\nbody.appendChild(gallery);\r\nbody.appendChild(intersectingContainer);\r\n\r\ninputRef.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  clear(gallery);\r\n  page += 1;\r\n  const searchValue = e.currentTarget.elements.query.value;\r\n  appendImages(gallery, searchValue, keyApi, page);\r\n  return (searchRequest = searchValue);\r\n});\r\n\r\ngallery.addEventListener('click', e => {\r\n  const image = e.target;\r\n  createPhotoModal(image.dataset.source, image.getAttribute('alt'));\r\n});\r\n\r\n\r\nconst options = { threshold: 0.05 };\r\nconst observer = new IntersectionObserver(entries => {\r\n  entries.map(entry => {\r\n    if (entry.isIntersecting) {\r\n      if (page > 1) {\r\n        page += 1;\r\n        appendImages(gallery, searchRequest, keyApi, page);\r\n      }\r\n    }\r\n  });\r\n}, options);\r\nobserver.observe(intersectingContainer);\r\n","class StringBuilder {\r\n    constructor(baseString = '') {\r\n      this.value = baseString;\r\n      return this.value;\r\n    }\r\n\r\n    append(str) {\r\n      this.value = this.value + str;\r\n      return this;\r\n    }\r\n  \r\n    prepend(str) {\r\n      this.value = str + this.value;\r\n      return this;\r\n    }\r\n  \r\n    pad(str) {\r\n      this.value = str + this.value + str;\r\n      return this;\r\n    }\r\n  }\r\n  \r\n  const builder = new StringBuilder('.');\r\n  builder\r\n  .append('^')\r\n  .prepend('^')\r\n  .pad('=')\r\n  console.log(builder.value); // '=^.^='"],"sourceRoot":""}